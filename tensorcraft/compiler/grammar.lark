start: tensorexp+

tensorexp: tensor "=" tensorop

tensorop: operand
        | tensorop "+" operand -> add
        | tensorop "-" operand -> sub
        | tensorop "*" operand -> prod
        | tensorop "/" operand -> div
        | tensorop "==" operand -> equal
        | tensorop "!=" operand -> nequal
        | tensorop "&&" operand -> bool_and
        | tensorop "||" operand -> bool_or
        | tensorop ">" operand -> gt
        | tensorop "<" operand -> lt
        | tensorop ">=" operand -> ge
        | tensorop "<=" operand -> le

operand: signed_tensor
         | signed_idxvar
         | SIGNED_NUMBER
         | "(" tensorop ")" -> parenthesis

signed_tensor: tensor -> pos_tensor
                | "-" tensor -> neg_tensor

tensor: TENSORVAR
        | TENSORVAR "[" multiidxop "]"

TENSORVAR: /[A-Z][a-zA-Z0-9_]*/

idxassignment: "[" multiidxop "]"

multiidxop: idx
            | multiidxop "," idx


// idxop: idxproduct
//     | idxop "+" idxproduct   -> idxadd
//     | idxop "-" idxproduct   -> idxsub

// idxproduct: idx
//     | idxproduct "*" idx  -> idxmul
//     | idxproduct "/" idx  -> idxdiv

idx: NUMBER           -> scalar
     | INDEXVAR        -> indexvar
    //  | "-" idx         -> neg
    //  | "(" idxop ")"

signed_idxvar: INDEXVAR -> pos_indexvar
                | "-" INDEXVAR -> neg_indexvar
INDEXVAR : /[a-z]/

_NL: /(\r?\n)+\s*/

%import common.SIGNED_NUMBER
%import common.NUMBER
%import common.WS


COMMENT: /\s*/ "#" /[^\n]/*

%ignore WS
%ignore COMMENT
