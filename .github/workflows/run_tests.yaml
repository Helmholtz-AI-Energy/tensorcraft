name: Test

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_call:

jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Setup MPI
        uses: mpi4py/setup-mpi@v1.3.2
        with:
          mpi: openmpi
      - name: Install dependencies
        run: |
          uv venv create --python ${{ matrix.python-version }}
          source .venv/bin/activate
          uv pip install .[dev]
      - name: Test with pytest and cmdline commands
        run: |
          coverage run
          mpirun -n 2 coverage run -m pytest --hypothesis-profile mpi -m mpi_test
          mpirun -n 4 coverage run -m pytest --hypothesis-profile mpi -m mpi_test
          mpirun -n 8 --use-hwthread-cpus coverage run -m pytest --hypothesis-profile mpi -m mpi_test
          coverage combine
          coverage xml
      - name: Test notebooks
        run: |
          pytest --nbmake "./notebooks" --ignore=notebooks/mpi/mpi_2D_3D_mm.ipynb
